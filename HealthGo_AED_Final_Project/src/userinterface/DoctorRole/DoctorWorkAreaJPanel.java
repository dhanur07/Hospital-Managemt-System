/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.DoctorRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.AmbulanceOrganization;
import Business.Organization.DoctorOrganization;
import Business.Organization.LabOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AmbulanceWorkRequest;
import Business.WorkQueue.LabTestWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author raunak
 */
public class DoctorWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private DoctorOrganization organization;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private DoctorOrganization docOrganization;
    private Network network;
    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public DoctorWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, DoctorOrganization organization, Enterprise enterprise,Network network) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.userAccount = account; 
        this.docOrganization = (DoctorOrganization)organization;
        this.network=network;
        valueLabel.setText(userAccount.getEmployee().getName());
       // ambulanceRequestBtn.setEnabled(false);
        //pharmacyRequestBtn.setEnabled(false);
     //   labTestRequestBtn.setEnabled(false);
      //  TreatmentCompleteButton.setEnabled(false);
        populateRequestTable();
    }
    
    public void populateRequestTable(){
        DefaultTableModel model = (DefaultTableModel) workRequestJTable.getModel();
        
        model.setRowCount(0);
        for (WorkRequest request : docOrganization.getWorkQueue().getWorkRequestList()){
            Object[] row = new Object[10];
            
            row[0] = request;
            row[1] = request.getGender();
            row[2] = request.getAge();
            row[3] = request.getDoctor()== null ? null : request.getDoctor().getEmployee().getName();
            row[4] = request.getAmbulanceDriver()== null ? null : request.getAmbulanceDriver().getEmployee().getName();
            row[5] = request.getAssignedStaff() == null ? null : request.getAssignedStaff().getEmployee().getName();
          
            row[6] = request.getAssignedLab()== null ? null : request.getAssignedLab().getEmployee().getName();
            
            String result = ((LabTestWorkRequest) request).getTestResult();
            row[7] = result == null ? "Waiting" : result;
            
            row[8] = request.getPharmacist()== null ? null : request.getPharmacist().getEmployee().getName();
            row[9] = request.getStatus();
            
            model.addRow(row);
        }
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        workRequestJTable = new javax.swing.JTable();
        labTestRequestBtn = new javax.swing.JButton();
        refreshTestJButton = new javax.swing.JButton();
        enterpriseLabel = new javax.swing.JLabel();
        valueLabel = new javax.swing.JLabel();
        ambulanceRequestBtn = new javax.swing.JButton();
        pharmacyRequestBtn = new javax.swing.JButton();
        TreatmentCompleteButton = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        ambulanceRequestBtn1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        workRequestJTable.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        workRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Patient Name", "Patient Gender", "Patient Age", "Doctor Assigned", "Ambulance Assigned", "Staff Assigned", "Lab Assigned", "Test Result", "Pharmacist Assigned", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(workRequestJTable);
        if (workRequestJTable.getColumnModel().getColumnCount() > 0) {
            workRequestJTable.getColumnModel().getColumn(0).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(1).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(2).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(3).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(4).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(5).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(6).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(7).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(8).setResizable(false);
            workRequestJTable.getColumnModel().getColumn(9).setResizable(false);
        }

        labTestRequestBtn.setBackground(new java.awt.Color(153, 153, 153));
        labTestRequestBtn.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        labTestRequestBtn.setText("Request Lab Test");
        labTestRequestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                labTestRequestBtnActionPerformed(evt);
            }
        });

        refreshTestJButton.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        refreshTestJButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/DoctorRole/refresh.png"))); // NOI18N
        refreshTestJButton.setText("Refresh");
        refreshTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                refreshTestJButtonActionPerformed(evt);
            }
        });

        enterpriseLabel.setBackground(new java.awt.Color(0, 102, 255));
        enterpriseLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        enterpriseLabel.setText("Welcome Mr.");

        valueLabel.setBackground(new java.awt.Color(0, 102, 255));
        valueLabel.setFont(new java.awt.Font("Times New Roman", 1, 18)); // NOI18N
        valueLabel.setText("<value>");

        ambulanceRequestBtn.setBackground(new java.awt.Color(153, 153, 153));
        ambulanceRequestBtn.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        ambulanceRequestBtn.setText("Request Ambulance");
        ambulanceRequestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ambulanceRequestBtnActionPerformed(evt);
            }
        });

        pharmacyRequestBtn.setBackground(new java.awt.Color(153, 153, 153));
        pharmacyRequestBtn.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        pharmacyRequestBtn.setText("Request Pharmacy");
        pharmacyRequestBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pharmacyRequestBtnActionPerformed(evt);
            }
        });

        TreatmentCompleteButton.setBackground(new java.awt.Color(0, 153, 51));
        TreatmentCompleteButton.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        TreatmentCompleteButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/DoctorRole/treatmentComplete.png"))); // NOI18N
        TreatmentCompleteButton.setText("Treatment Complete");
        TreatmentCompleteButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TreatmentCompleteButtonActionPerformed(evt);
            }
        });

        jButton1.setBackground(new java.awt.Color(0, 153, 51));
        jButton1.setFont(new java.awt.Font("Calibri", 1, 14)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/userinterface/DoctorRole/Accept.png"))); // NOI18N
        jButton1.setText("Accept Patient");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        ambulanceRequestBtn1.setBackground(new java.awt.Color(255, 0, 0));
        ambulanceRequestBtn1.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        ambulanceRequestBtn1.setText("Reject Request");
        ambulanceRequestBtn1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ambulanceRequestBtn1ActionPerformed(evt);
            }
        });

        jButton2.setBackground(new java.awt.Color(153, 153, 153));
        jButton2.setFont(new java.awt.Font("Calibri", 1, 12)); // NOI18N
        jButton2.setText("View Report");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                .addGroup(layout.createSequentialGroup()
                                    .addComponent(pharmacyRequestBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                    .addComponent(ambulanceRequestBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(100, 100, 100)
                                    .addComponent(labTestRequestBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(TreatmentCompleteButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                        .addComponent(ambulanceRequestBtn1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGap(173, 173, 173)))
                            .addComponent(refreshTestJButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 228, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(valueLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(enterpriseLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(valueLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(refreshTestJButton)
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ambulanceRequestBtn1, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ambulanceRequestBtn)
                    .addComponent(labTestRequestBtn))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton2)
                    .addComponent(pharmacyRequestBtn))
                .addGap(53, 53, 53)
                .addComponent(TreatmentCompleteButton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void labTestRequestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_labTestRequestBtnActionPerformed
 
        int row = workRequestJTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "please select a row");
        }
        WorkRequest request = (WorkRequest)workRequestJTable.getValueAt(row,0);
        if(request.getStatus()=="Patient Received by hospital")
        {        
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("RequestLabTestJPanel", new RequestLabTestJPanel(userProcessContainer, userAccount, enterprise, request));
        layout.next(userProcessContainer);
        }
        else
        {
         JOptionPane.showMessageDialog(null, "Not Allowed");
        }
 

 
        
    }//GEN-LAST:event_labTestRequestBtnActionPerformed

    private void refreshTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_refreshTestJButtonActionPerformed

        populateRequestTable();
        
    }//GEN-LAST:event_refreshTestJButtonActionPerformed

    private void ambulanceRequestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ambulanceRequestBtnActionPerformed
   
        try{// TODO add your handling code here:
        int row = workRequestJTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "please select a row");
        }
        WorkRequest request = (WorkRequest)workRequestJTable.getValueAt(row,0);
        if(request.getStatus()=="Accepted")
        {
        Organization org = null;
        for (Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
            if (organization instanceof AmbulanceOrganization){
                org = organization;
                break;
            }
        }
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(request);
            userAccount.getWorkQueue().getWorkRequestList().add(request);
        }
        
        System.out.println(request);
        request.setStatus("Awaiting Acceptance from Ambulance");
        enterprise.getWorkQueue().getWorkRequestList().add(request);
        populateRequestTable();
        }
        else
        {
        JOptionPane.showMessageDialog(null, "Not Allowed");
        }
    }
         catch(Exception ex)
       {
       JOptionPane.showMessageDialog(null, "Please Select a row");
       }
        
        
        
        
    }//GEN-LAST:event_ambulanceRequestBtnActionPerformed

    private void pharmacyRequestBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pharmacyRequestBtnActionPerformed
        // TODO add your handling code here:
         try{// TODO add your handling code here:
        int row = workRequestJTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "please select a row");
        }
        WorkRequest request = (WorkRequest)workRequestJTable.getValueAt(row,0);
        if(request.getStatus()=="Completed")
        {
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        userProcessContainer.add("RequestPharmacyJPanel", new RequestPharmacyJPanel(userProcessContainer, userAccount, enterprise,network, request));
        layout.next(userProcessContainer);
        }
        else
        {
         JOptionPane.showMessageDialog(null, "Not Allowed");
        }
         }
         catch(Exception ex)
         {
                JOptionPane.showMessageDialog(null, "Please Select a row");

         }
             
        
         
    }//GEN-LAST:event_pharmacyRequestBtnActionPerformed

    private void TreatmentCompleteButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TreatmentCompleteButtonActionPerformed
        // TODO add your handling code here:
        int row = workRequestJTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "please select a row");
        }
      
        WorkRequest request = (WorkRequest)workRequestJTable.getValueAt(row,0);
        request.setStatus("Treatment Complete");
        ambulanceRequestBtn.setEnabled(false);
        labTestRequestBtn.setEnabled(false);
        pharmacyRequestBtn.setEnabled(false);
        JOptionPane.showMessageDialog(null, "Treatmeant Completed");
        
        
       populateRequestTable();
    }//GEN-LAST:event_TreatmentCompleteButtonActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        int row = workRequestJTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "please select a row");
        }
      
        WorkRequest request = (WorkRequest)workRequestJTable.getValueAt(row,0);
        request.setDoctor(userAccount);
        request.setStatus("Accepted");
        ambulanceRequestBtn.setEnabled(true);
        
        
       populateRequestTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void ambulanceRequestBtn1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ambulanceRequestBtn1ActionPerformed
     int row = workRequestJTable.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(null, "please select a row");
        }
      
        WorkRequest request = (WorkRequest)workRequestJTable.getValueAt(row,0);
                
    }//GEN-LAST:event_ambulanceRequestBtn1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        try{
            int selectedRow = workRequestJTable.getSelectedRow();

            if (selectedRow < 0){
                return;
            }
            

            LabTestWorkRequest request = (LabTestWorkRequest)workRequestJTable.getValueAt(selectedRow, 0);
            if(request.getStatus()=="Completed")
        {
            ViewReportJPanel viewReportJPanel = new ViewReportJPanel(userProcessContainer, request);
            userProcessContainer.add("viewReportJPanel", viewReportJPanel);
            CardLayout layout = (CardLayout) userProcessContainer.getLayout();
            layout.next(userProcessContainer);
        }
            else{
                     JOptionPane.showMessageDialog(null, "Not Allowed");

            }
        }
        catch(Exception ex)
        {
            JOptionPane.showMessageDialog(null, "Please select a row");
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton TreatmentCompleteButton;
    private javax.swing.JButton ambulanceRequestBtn;
    private javax.swing.JButton ambulanceRequestBtn1;
    private javax.swing.JLabel enterpriseLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton labTestRequestBtn;
    private javax.swing.JButton pharmacyRequestBtn;
    private javax.swing.JButton refreshTestJButton;
    private javax.swing.JLabel valueLabel;
    private javax.swing.JTable workRequestJTable;
    // End of variables declaration//GEN-END:variables
}
